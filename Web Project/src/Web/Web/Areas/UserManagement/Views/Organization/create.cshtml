@model OrganizationDto
@{
    string lat = "26.6293058", lon = "87.9824758";
    if (Model != null)
    {
        if (Model.latitude != null && Model.longitude != null)
        {
            lat = Model.latitude;
            lon = Model.longitude;
        }
    }

}

<style>
    #searchInput {
        margin-top: 5px;
        width: 800px;
    }
</style>
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Organization Details</h4>
                <form method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class=" row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(a => a.organization_name)
                                @Html.TextBoxFor(a => a.organization_name, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.organization_name)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.short_name)
                                @Html.TextBoxFor(a => a.short_name, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.short_name)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.address)
                                @Html.TextBoxFor(a => a.address, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.address)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.contact_no)
                                @Html.TextBoxFor(a => a.contact_no, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.contact_no)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.email)
                                @Html.TextBoxFor(a => a.email, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.email)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.contact_person)
                                @Html.TextBoxFor(a => a.contact_person, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.contact_person)</p>
                            </div>

                        </div>
                        <div class="col-md-4">

                            <div class="form-group">
                                @Html.LabelFor(a => a.pan_no)
                                @Html.TextBoxFor(a => a.pan_no, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.pan_no)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.facebook_url)
                                @Html.TextBoxFor(a => a.facebook_url, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.facebook_url)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.twitter_url)
                                @Html.TextBoxFor(a => a.twitter_url, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.twitter_url)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.instagram_url)
                                @Html.TextBoxFor(a => a.instagram_url, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.instagram_url)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.youtube_url)
                                @Html.TextBoxFor(a => a.youtube_url, new { @class = "form-control" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.youtube_url)</p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(a => a.description)
                                @Html.TextAreaFor(a => a.description, new { @class = "form-control", rows = "12" })
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.description)</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(a => a.logo)
                                <input type="file" name="file" id="file" class="form-control" />
                                <p class="text-danger">@Html.ValidationMessageFor(a => a.logo)</p>
                            </div>
                            <div class="form-group">
                                @{
                                    string logoSource = "/Images/Default/default.png";
                                    if (Model != null)
                                    {
                                        if (!string.IsNullOrWhiteSpace(Model.logo))
                                            logoSource = "/Images/Custom/" + Model.logo;
                                    }
                                    <img id="image" class="image-preview" src="@logoSource" alt="" />
                                }
                            </div>

                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <input id="searchInput" class="form-control" type="text" placeholder="Enter a location">
                                <div class="map" id="map" style="width: 100%; height: 400px;"></div>
                                <div class="form_area">

                                    <input type="text" readonly="readonly" value="@lat" name="latitude" id="latitude_id">
                                    <input type="text" readonly="readonly" value="@lon" name="longitude" id="longitude_id">
                                </div>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary mr-2">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyC_JU9jsJnO2HtmV9vXrUxdvyBJwRQA5RA&sensor=false&libraries=places"></script>
    <script>
        $("#file").change(function () {
            readURL(this);
        });
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }


    function initialize() {
        $('#searchInput').keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });

        var latlng = new google.maps.LatLng('@lat', '@lon');
        var map = new google.maps.Map(document.getElementById('map'), {
            center: latlng,
            zoom: 13
        });
        var marker = new google.maps.Marker({
            map: map,
            position: latlng,
            draggable: true,
            anchorPoint: new google.maps.Point(0, -29)
        });
        var input = document.getElementById('searchInput');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        var geocoder = new google.maps.Geocoder();
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        var infowindow = new google.maps.InfoWindow();
        autocomplete.addListener('place_changed', function () {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                alert("Autocomplete's returned place contains no geometry");
                return false;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);
            }

            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            bindDataToForm(place.formatted_address, place.geometry.location.lat(), place.geometry.location.lng());
            infowindow.setContent(place.formatted_address);
            infowindow.open(map, marker);

        });

        // this function will work on marker move event into map
        google.maps.event.addListener(marker, 'dragend', function () {
            geocoder.geocode({ 'latLng': marker.getPosition() }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        bindDataToForm(results[0].formatted_address, marker.getPosition().lat(), marker.getPosition().lng());
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);
                    }
                }
            });
        });
    }
    function bindDataToForm(address, lat, lng) {

        document.getElementById('latitude_id').value = lat;
        document.getElementById('longitude_id').value = lng;
    }
    google.maps.event.addDomListener(window, 'load', initialize);


    </script>
}